// This file is generated by Firebase Studio.
'use server';
/**
 * @fileOverview AI-powered tool that suggests phrases or highlights for a developer's bio.
 *
 * - suggestBio - A function that suggests phrases for the developer's bio.
 * - SuggestBioInput - The input type for the suggestBio function.
 * - SuggestBioOutput - The return type for the suggestBio function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestBioInputSchema = z.object({
  profileDetails: z
    .string()
    .describe('Details about the developer, including skills, experience, and projects.'),
  codeRepositories: z
    .string()
    .describe('A summary of the developer code repositories.'),
});
export type SuggestBioInput = z.infer<typeof SuggestBioInputSchema>;

const SuggestBioOutputSchema = z.object({
  suggestedPhrases: z.array(z.string()).describe('An array of suggested phrases or highlights for the bio.'),
});
export type SuggestBioOutput = z.infer<typeof SuggestBioOutputSchema>;

export async function suggestBio(input: SuggestBioInput): Promise<SuggestBioOutput> {
  return suggestBioFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestBioPrompt',
  input: {schema: SuggestBioInputSchema},
  output: {schema: SuggestBioOutputSchema},
  prompt: `You are an AI assistant specializing in crafting compelling personal statements for software developers.

  Based on the provided profile details and code repository summaries, suggest phrases or highlights that the developer can use in their bio to create an impactful personal statement.

  Profile Details: {{{profileDetails}}}
  Code Repositories: {{{codeRepositories}}}

  Focus on highlighting key skills, experiences, and notable projects. Provide at least three distinct suggestions, but no more than five.
  Format your suggestions as a numbered list. Be creative and engaging.
  `,
});

const suggestBioFlow = ai.defineFlow(
  {
    name: 'suggestBioFlow',
    inputSchema: SuggestBioInputSchema,
    outputSchema: SuggestBioOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
